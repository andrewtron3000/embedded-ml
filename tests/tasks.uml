let 
  import "std.uh"
  import "string.uh"
  import "list.uh"
  import "int.uh"
  import "threads.uh"
  import "queues.uh"
  import "tasks.uh"

  exception Raw of string

  val a-queue = queue-create ()
  val b-queue = queue-create ()
  val c-queue = queue-create ()

  fun task-hook name nq v = case v of Raw s => ( print [[name]: message is: [s]\n] ;
                                                 queue-send nq (Raw s) ) 
                                    | _ => print "unknown message" 

  fun terminal-hook name v = case v of Raw s => print [[name](terminal): message is [s]\n]
                                     | _ => print "unknown message"

  fun main i () = ( ( if (i mod 1000000) = 0 
                      then queue-send a-queue (Raw (int-tostring (queue-length a-queue)))
                      else yield () ) ; 
                    main (i+1) () )
in
    task-create c-queue (terminal-hook "taskC") ;
    task-create b-queue (task-hook "taskB" c-queue) ;
    task-create a-queue (task-hook "taskA" b-queue) ;
    main 0 ()
end
