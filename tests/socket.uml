let
    import "std.uh"
    import "list.uh"
    import "string.uh"
    import "int.uh"
    import "descriptorio.uh"
    import "socket.uh"

    fun udp-client () =
        let
            val s = socket-open-udp ()
            val () = socket-connect (s, "192.168.1.5", 51423)
        in
            ( descriptor-write (s, "hi from udp land") ;
              socket-close s )
        end

    fun udp-sentence-client () =
        let
            val s = socket-open-udp ()
            val () = socket-bind (s, 6970)
            val s2 = socket-open-udp ()
            val () = socket-bind (s2, 6970)
            val () = socket-connect (s, "andrewha-laptop", 6969)
            val () = socket-connect (s2, "andrewha-laptop", 6980)

            fun get-new-sentence s = 
                let
                    val b = descriptor-bytes-avail s
                in
                    if b > 0 then print [got: <[descriptor-read (s, b)]>\n] else get-new-sentence s
                end

        in
            ( descriptor-write (s, "hi from udp land") ;
              socket-close s ;
              (* get-new-sentence s ; *)
              descriptor-write (s2, "hi again from udp land") ;
              get-new-sentence s2 ;
              get-new-sentence s2 ;
              socket-close s2 )
        end

    fun tcp-client () =
        let 
            val s = socket-open-tcp ()
            val () = socket-connect (s, "127.0.0.1", 40004)
                             
            fun ploop i =
                let
                    val b = descriptor-bytes-avail s
                in 
                    if b > 0 
                    then print [<[descriptor-read (s, b)]>\n]
                    else ploop (i + 1)
                end
        in
            ( ploop 1 ;
              socket-close s )
        end

    fun tcp-server () = 
        let
            val s = socket-open-tcp ()
            val () = socket-bind (s, 40005)
            val () = socket-listen (s, 1)
            val s2 = socket-accept s
        in
            ( descriptor-write (s2, "greetings from FP land.  I'm glad to see you.") ;
              socket-close s ;
              socket-close s2 )
        end

    fun bool-tostring b = if b then "true" else "false"

in
    ( print [ip address of andrewha-laptop is: [socket-gethostbyname "andrewha-laptop"]\n] ;
      print [hhihihih\n] ;
      print [ip address of cnn is: [socket-gethostbyname "www.cnn.com"]\n] ;
      print [ip address of google is: [socket-gethostbyname "www.google.com"]\n] ;
      print [[bool-tostring (socket-is-ipaddr "www.google.com")]\n] ;
      print [[bool-tostring (socket-is-ipaddr "127.0.0.1")]\n] ;
      print [[bool-tostring (socket-is-ipaddr "www.127.com")]\n] ;
      print [[bool-tostring (socket-is-ipaddr "1232132")]\n] ;
      udp-sentence-client () ;
      print [[bool-tostring (socket-is-ipaddr "1.2.3.4.5")]\n] )
    (* udp-client () *)
    (* udp-sentence-client () *)
end
