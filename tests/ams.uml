let
    import "std.uh"
    import "list.uh"
    import "string.uh"
    import "int.uh"
    import "array.uh"
    import "char.uh"
    import "growarray.uh"
    import "marshall.uh"
    import "ams-pkts.uh"
    import "ams-states.uh"
    import "ams.uh"
    import "descriptorio.uh"
    import "socket.uh"
    import "threads.uh"
    import "queues.uh"
    import "messagequeues.uh"
    import "futures.uh"
    import "activeobject.uh"

    val s = "hi"

    val ams = activeobject-create ams-process-function true
in
    ( future-force (ams (AMSRegister ("app", "auth", (* unit *) 1, (* role *) 100))) ;
      future-force (ams (AMSUnregister (* node id *) 9)) ;
      print "hi" )
end
