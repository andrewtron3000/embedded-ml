let
    import "std.uh"
    import "list.uh"
    import "string.uh"
    import "int.uh"
    import "array.uh"
    import "char.uh"
    import "growarray.uh"
    import "marshall.uh" 
    import "ams.uh"
    import "descriptorio.uh"
    import "socket.uh"

    val k = socket-open-udp ()
    val () = socket-connect (k, "192.168.1.5", 51423)

(*    val r = { subject=1, continuum=2, unit=3, role=4, delivery_vector_num=5, priority=6, flow=7 }
    val s = subscription_assert_tostring r *)

    val r2 = { unit=1, mams_endpoint_name = "goodie tooshoes" }
    val s2 = cell_descriptor_tostring r2

in
    ( descriptor-write (k, s2) ;
      socket-close k )
end
