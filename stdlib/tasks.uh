val provide-tasks = ()
val require-threads = provide-threads
val require-messagequeues = provide-messagequeues

(* arguments: message queue, function to call, initial state *)
(* function fu should return just the next state *)
fun task-create mq fu st = 
    let
        fun looper s () =
            let 
                val x = mq-receive mq
                val s' = case x of NONE => s
                                 | SOME m => fu s m
            in
                ( yield () ;
                  looper s' () )
            end
    in
        fork (looper st)
    end
