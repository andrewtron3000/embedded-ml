val provide-ams-states = ()
 
datatype MAMS_state_type =
     MAMS_WAITING_FOR_YOU_ARE_IN
   | MAMS_YOU_ARE_IN
 
type ams-statetype =
    {
        mams_port : int,
        app_name : string,
        aams_sender : (string -> unit),
        node_to_contact_summary_map : (int, contact_summary_type) map,
        auth_name : string,
        state : MAMS_state_type,
        node_id : int,
        role : int,
        subject_to_nodes_map : (int, int) map,
        venture : int,
        query_number : int,
        last_registrar_hb_time : int * int,
        mams_host : string,
        registrar_dead : bool,
        mams_sender : (string -> unit),
        unit : int
    }

datatype ams-optype =
    mams_port of int |
    app_name of string |
    aams_sender of (string -> unit) |
    node_to_contact_summary_map of (int, contact_summary_type) map |
    auth_name of string |
    state of MAMS_state_type |
    node_id of int |
    role of int |
    subject_to_nodes_map of (int, int) map |
    venture of int |
    query_number of int |
    last_registrar_hb_time of int * int |
    mams_host of string |
    registrar_dead of bool |
    mams_sender of (string -> unit) |
    unit of int

fun ams-update-state tv st =
    case tv of 
        mams_port v => {
            mams_port = v,
            app_name = #app_name/ams-statetype st,
            aams_sender = #aams_sender/ams-statetype st,
            node_to_contact_summary_map = #node_to_contact_summary_map/ams-statetype st,
            auth_name = #auth_name/ams-statetype st,
            state = #state/ams-statetype st,
            node_id = #node_id/ams-statetype st,
            role = #role/ams-statetype st,
            subject_to_nodes_map = #subject_to_nodes_map/ams-statetype st,
            venture = #venture/ams-statetype st,
            query_number = #query_number/ams-statetype st,
            last_registrar_hb_time = #last_registrar_hb_time/ams-statetype st,
            mams_host = #mams_host/ams-statetype st,
            registrar_dead = #registrar_dead/ams-statetype st,
            mams_sender = #mams_sender/ams-statetype st,
            unit = #unit/ams-statetype st
         }
        | app_name v => {
            mams_port = #mams_port/ams-statetype st,
            app_name = v,
            aams_sender = #aams_sender/ams-statetype st,
            node_to_contact_summary_map = #node_to_contact_summary_map/ams-statetype st,
            auth_name = #auth_name/ams-statetype st,
            state = #state/ams-statetype st,
            node_id = #node_id/ams-statetype st,
            role = #role/ams-statetype st,
            subject_to_nodes_map = #subject_to_nodes_map/ams-statetype st,
            venture = #venture/ams-statetype st,
            query_number = #query_number/ams-statetype st,
            last_registrar_hb_time = #last_registrar_hb_time/ams-statetype st,
            mams_host = #mams_host/ams-statetype st,
            registrar_dead = #registrar_dead/ams-statetype st,
            mams_sender = #mams_sender/ams-statetype st,
            unit = #unit/ams-statetype st
         }
        | aams_sender v => {
            mams_port = #mams_port/ams-statetype st,
            app_name = #app_name/ams-statetype st,
            aams_sender = v,
            node_to_contact_summary_map = #node_to_contact_summary_map/ams-statetype st,
            auth_name = #auth_name/ams-statetype st,
            state = #state/ams-statetype st,
            node_id = #node_id/ams-statetype st,
            role = #role/ams-statetype st,
            subject_to_nodes_map = #subject_to_nodes_map/ams-statetype st,
            venture = #venture/ams-statetype st,
            query_number = #query_number/ams-statetype st,
            last_registrar_hb_time = #last_registrar_hb_time/ams-statetype st,
            mams_host = #mams_host/ams-statetype st,
            registrar_dead = #registrar_dead/ams-statetype st,
            mams_sender = #mams_sender/ams-statetype st,
            unit = #unit/ams-statetype st
         }
        | node_to_contact_summary_map v => {
            mams_port = #mams_port/ams-statetype st,
            app_name = #app_name/ams-statetype st,
            aams_sender = #aams_sender/ams-statetype st,
            node_to_contact_summary_map = v,
            auth_name = #auth_name/ams-statetype st,
            state = #state/ams-statetype st,
            node_id = #node_id/ams-statetype st,
            role = #role/ams-statetype st,
            subject_to_nodes_map = #subject_to_nodes_map/ams-statetype st,
            venture = #venture/ams-statetype st,
            query_number = #query_number/ams-statetype st,
            last_registrar_hb_time = #last_registrar_hb_time/ams-statetype st,
            mams_host = #mams_host/ams-statetype st,
            registrar_dead = #registrar_dead/ams-statetype st,
            mams_sender = #mams_sender/ams-statetype st,
            unit = #unit/ams-statetype st
         }
        | auth_name v => {
            mams_port = #mams_port/ams-statetype st,
            app_name = #app_name/ams-statetype st,
            aams_sender = #aams_sender/ams-statetype st,
            node_to_contact_summary_map = #node_to_contact_summary_map/ams-statetype st,
            auth_name = v,
            state = #state/ams-statetype st,
            node_id = #node_id/ams-statetype st,
            role = #role/ams-statetype st,
            subject_to_nodes_map = #subject_to_nodes_map/ams-statetype st,
            venture = #venture/ams-statetype st,
            query_number = #query_number/ams-statetype st,
            last_registrar_hb_time = #last_registrar_hb_time/ams-statetype st,
            mams_host = #mams_host/ams-statetype st,
            registrar_dead = #registrar_dead/ams-statetype st,
            mams_sender = #mams_sender/ams-statetype st,
            unit = #unit/ams-statetype st
         }
        | state v => {
            mams_port = #mams_port/ams-statetype st,
            app_name = #app_name/ams-statetype st,
            aams_sender = #aams_sender/ams-statetype st,
            node_to_contact_summary_map = #node_to_contact_summary_map/ams-statetype st,
            auth_name = #auth_name/ams-statetype st,
            state = v,
            node_id = #node_id/ams-statetype st,
            role = #role/ams-statetype st,
            subject_to_nodes_map = #subject_to_nodes_map/ams-statetype st,
            venture = #venture/ams-statetype st,
            query_number = #query_number/ams-statetype st,
            last_registrar_hb_time = #last_registrar_hb_time/ams-statetype st,
            mams_host = #mams_host/ams-statetype st,
            registrar_dead = #registrar_dead/ams-statetype st,
            mams_sender = #mams_sender/ams-statetype st,
            unit = #unit/ams-statetype st
         }
        | node_id v => {
            mams_port = #mams_port/ams-statetype st,
            app_name = #app_name/ams-statetype st,
            aams_sender = #aams_sender/ams-statetype st,
            node_to_contact_summary_map = #node_to_contact_summary_map/ams-statetype st,
            auth_name = #auth_name/ams-statetype st,
            state = #state/ams-statetype st,
            node_id = v,
            role = #role/ams-statetype st,
            subject_to_nodes_map = #subject_to_nodes_map/ams-statetype st,
            venture = #venture/ams-statetype st,
            query_number = #query_number/ams-statetype st,
            last_registrar_hb_time = #last_registrar_hb_time/ams-statetype st,
            mams_host = #mams_host/ams-statetype st,
            registrar_dead = #registrar_dead/ams-statetype st,
            mams_sender = #mams_sender/ams-statetype st,
            unit = #unit/ams-statetype st
         }
        | role v => {
            mams_port = #mams_port/ams-statetype st,
            app_name = #app_name/ams-statetype st,
            aams_sender = #aams_sender/ams-statetype st,
            node_to_contact_summary_map = #node_to_contact_summary_map/ams-statetype st,
            auth_name = #auth_name/ams-statetype st,
            state = #state/ams-statetype st,
            node_id = #node_id/ams-statetype st,
            role = v,
            subject_to_nodes_map = #subject_to_nodes_map/ams-statetype st,
            venture = #venture/ams-statetype st,
            query_number = #query_number/ams-statetype st,
            last_registrar_hb_time = #last_registrar_hb_time/ams-statetype st,
            mams_host = #mams_host/ams-statetype st,
            registrar_dead = #registrar_dead/ams-statetype st,
            mams_sender = #mams_sender/ams-statetype st,
            unit = #unit/ams-statetype st
         }
        | subject_to_nodes_map v => {
            mams_port = #mams_port/ams-statetype st,
            app_name = #app_name/ams-statetype st,
            aams_sender = #aams_sender/ams-statetype st,
            node_to_contact_summary_map = #node_to_contact_summary_map/ams-statetype st,
            auth_name = #auth_name/ams-statetype st,
            state = #state/ams-statetype st,
            node_id = #node_id/ams-statetype st,
            role = #role/ams-statetype st,
            subject_to_nodes_map = v,
            venture = #venture/ams-statetype st,
            query_number = #query_number/ams-statetype st,
            last_registrar_hb_time = #last_registrar_hb_time/ams-statetype st,
            mams_host = #mams_host/ams-statetype st,
            registrar_dead = #registrar_dead/ams-statetype st,
            mams_sender = #mams_sender/ams-statetype st,
            unit = #unit/ams-statetype st
         }
        | venture v => {
            mams_port = #mams_port/ams-statetype st,
            app_name = #app_name/ams-statetype st,
            aams_sender = #aams_sender/ams-statetype st,
            node_to_contact_summary_map = #node_to_contact_summary_map/ams-statetype st,
            auth_name = #auth_name/ams-statetype st,
            state = #state/ams-statetype st,
            node_id = #node_id/ams-statetype st,
            role = #role/ams-statetype st,
            subject_to_nodes_map = #subject_to_nodes_map/ams-statetype st,
            venture = v,
            query_number = #query_number/ams-statetype st,
            last_registrar_hb_time = #last_registrar_hb_time/ams-statetype st,
            mams_host = #mams_host/ams-statetype st,
            registrar_dead = #registrar_dead/ams-statetype st,
            mams_sender = #mams_sender/ams-statetype st,
            unit = #unit/ams-statetype st
         }
        | query_number v => {
            mams_port = #mams_port/ams-statetype st,
            app_name = #app_name/ams-statetype st,
            aams_sender = #aams_sender/ams-statetype st,
            node_to_contact_summary_map = #node_to_contact_summary_map/ams-statetype st,
            auth_name = #auth_name/ams-statetype st,
            state = #state/ams-statetype st,
            node_id = #node_id/ams-statetype st,
            role = #role/ams-statetype st,
            subject_to_nodes_map = #subject_to_nodes_map/ams-statetype st,
            venture = #venture/ams-statetype st,
            query_number = v,
            last_registrar_hb_time = #last_registrar_hb_time/ams-statetype st,
            mams_host = #mams_host/ams-statetype st,
            registrar_dead = #registrar_dead/ams-statetype st,
            mams_sender = #mams_sender/ams-statetype st,
            unit = #unit/ams-statetype st
         }
        | last_registrar_hb_time v => {
            mams_port = #mams_port/ams-statetype st,
            app_name = #app_name/ams-statetype st,
            aams_sender = #aams_sender/ams-statetype st,
            node_to_contact_summary_map = #node_to_contact_summary_map/ams-statetype st,
            auth_name = #auth_name/ams-statetype st,
            state = #state/ams-statetype st,
            node_id = #node_id/ams-statetype st,
            role = #role/ams-statetype st,
            subject_to_nodes_map = #subject_to_nodes_map/ams-statetype st,
            venture = #venture/ams-statetype st,
            query_number = #query_number/ams-statetype st,
            last_registrar_hb_time = v,
            mams_host = #mams_host/ams-statetype st,
            registrar_dead = #registrar_dead/ams-statetype st,
            mams_sender = #mams_sender/ams-statetype st,
            unit = #unit/ams-statetype st
         }
        | mams_host v => {
            mams_port = #mams_port/ams-statetype st,
            app_name = #app_name/ams-statetype st,
            aams_sender = #aams_sender/ams-statetype st,
            node_to_contact_summary_map = #node_to_contact_summary_map/ams-statetype st,
            auth_name = #auth_name/ams-statetype st,
            state = #state/ams-statetype st,
            node_id = #node_id/ams-statetype st,
            role = #role/ams-statetype st,
            subject_to_nodes_map = #subject_to_nodes_map/ams-statetype st,
            venture = #venture/ams-statetype st,
            query_number = #query_number/ams-statetype st,
            last_registrar_hb_time = #last_registrar_hb_time/ams-statetype st,
            mams_host = v,
            registrar_dead = #registrar_dead/ams-statetype st,
            mams_sender = #mams_sender/ams-statetype st,
            unit = #unit/ams-statetype st
         }
        | registrar_dead v => {
            mams_port = #mams_port/ams-statetype st,
            app_name = #app_name/ams-statetype st,
            aams_sender = #aams_sender/ams-statetype st,
            node_to_contact_summary_map = #node_to_contact_summary_map/ams-statetype st,
            auth_name = #auth_name/ams-statetype st,
            state = #state/ams-statetype st,
            node_id = #node_id/ams-statetype st,
            role = #role/ams-statetype st,
            subject_to_nodes_map = #subject_to_nodes_map/ams-statetype st,
            venture = #venture/ams-statetype st,
            query_number = #query_number/ams-statetype st,
            last_registrar_hb_time = #last_registrar_hb_time/ams-statetype st,
            mams_host = #mams_host/ams-statetype st,
            registrar_dead = v,
            mams_sender = #mams_sender/ams-statetype st,
            unit = #unit/ams-statetype st
         }
        | mams_sender v => {
            mams_port = #mams_port/ams-statetype st,
            app_name = #app_name/ams-statetype st,
            aams_sender = #aams_sender/ams-statetype st,
            node_to_contact_summary_map = #node_to_contact_summary_map/ams-statetype st,
            auth_name = #auth_name/ams-statetype st,
            state = #state/ams-statetype st,
            node_id = #node_id/ams-statetype st,
            role = #role/ams-statetype st,
            subject_to_nodes_map = #subject_to_nodes_map/ams-statetype st,
            venture = #venture/ams-statetype st,
            query_number = #query_number/ams-statetype st,
            last_registrar_hb_time = #last_registrar_hb_time/ams-statetype st,
            mams_host = #mams_host/ams-statetype st,
            registrar_dead = #registrar_dead/ams-statetype st,
            mams_sender = v,
            unit = #unit/ams-statetype st
         }
        | unit v => {
            mams_port = #mams_port/ams-statetype st,
            app_name = #app_name/ams-statetype st,
            aams_sender = #aams_sender/ams-statetype st,
            node_to_contact_summary_map = #node_to_contact_summary_map/ams-statetype st,
            auth_name = #auth_name/ams-statetype st,
            state = #state/ams-statetype st,
            node_id = #node_id/ams-statetype st,
            role = #role/ams-statetype st,
            subject_to_nodes_map = #subject_to_nodes_map/ams-statetype st,
            venture = #venture/ams-statetype st,
            query_number = #query_number/ams-statetype st,
            last_registrar_hb_time = #last_registrar_hb_time/ams-statetype st,
            mams_host = #mams_host/ams-statetype st,
            registrar_dead = #registrar_dead/ams-statetype st,
            mams_sender = #mams_sender/ams-statetype st,
            unit = v
         }

