(* sockets interface *)

val require-descriptorio = provide-descriptorio
val provide-socket = ()

(* client calls *)

(* opens a network stream socket *)
native socket-open = "socketOpen" : unit -> descType

(* socket-connect <descType> <hostname> <port> *)
native socket-connect = "socketConnect" : descType * string * int -> unit

(* server calls *)

(* opens a network stream socket *)
native socket-set-nonblocking = "socketSetNonBlocking" : descType -> unit

(* socket-bind <descType> <port> *)
native socket-bind = "socketBind" : descType * int -> unit

(* socket-listen <descType> <queuesize> *)
native socket-listen = "socketListen" : descType * int -> unit

(* socket-accept <descType> *)
native socket-accept = "socketAccept" : descType -> descType
(* socket-close <descType> *)
val socket-close = descriptor-close
